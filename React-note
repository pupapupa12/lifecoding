* 리액트 터미널 코드
> 생성
    'cd create-react-app .'
    -> '.' 현재 위치한 폴더에 'create-react-app' 리액트 앱을 설치하시오

    'npm start'
    -> 리액트 파일 실행

    crtl + c (컨트롤 + c 누르면 이벤트 발생)
    -> 현재 사용중인 개발환경 종료

> 배포
    'npm run build'
    -> 파일 배포
    --> "build"파일 생성
    --> "index.html"을 무시한 다른 파일 존재
        'serve -s build'
        -> 빌드한 것을 서비스할 때 사용
        -> 'serve' = 웹서버 / '-s' = 옵션 스타일
        -> 어떤 경로로 고객이 들어와도 해당 "build"파일의 "index.html"을 보여줌
        -> 사용가능한 서버를 노출 => 개발환경 서버가 아닌 노출되는 서버 생성

----------------------------------------

* 리액트 : 사용자정의태그(=컴포넌트)를 만드는 기술
    사용자정의태그(=컴포넌트)
    1) 그룹핑가능한 요소
    2) 컴포넌트를 생성시 이름 무조건 첫글자 !대문자! 사용 (소문자=html 태그)
    3) 같은 컴포넌트를 사용하는 것은 한번에 수정 가능
    => 다른 사람이 사용하는 컴포넌트를 쉽게 사용 가능 + 나의 컴포넌트도 쉽게 전달 가능

----------------------------------------
5 Props

* Prop
: 컴포넌트에 속성값을 부여
    '<a href="/">{props.title}</a>'
    -> {} 중괄호 사이의 문자는 문자열 아닌 표현식으로 취급


----------------------------------------

원래 데이터 유지하는 상태로 다른 데이터 부가적으로 입력 시 방법


> 상태의 데이터타입이 원시데이터(PRIMITIVE)일 경우
const [value, setValue] = useState(PRIMITIVE);
    PRIMITIVE 원시데이터타입 종류
        : 'string', 'number', bigint, 'boolean', undefined, symbol, null
    => 원래대로 사용

> 상태의 데이터타입이 범객체일 경우
const [value, setValue] = useState(OBJECT);
    범객체 타입 종류
        : 'object', 'array'

    -----
    >> 사용방법 (object인 경우)
        1. newValue = {...value}
            -> '...' 3개를 붙이면 'value'는 복제된 "newValue"가 됨
            (= 기존 데이터가 아닌 복제데이터 newValue가 변경)
        2. setValue(newValue)
            -> "setValue"로 "newValue"를 실행시키면 비로소 컴포넌트가 다시 실행

    >> 사용방법 (array인 경우)
        1. newValue = [...value]
            -> '...' 3개를 붙이면 'value'는 복제된 "newValue"가 됨
            (= 기존 데이터가 아닌 복제데이터 newValue가 변경)
        2. setValue(newValue)
            -> "setValue"로 "newValue"를 실행시키면 비로소 컴포넌트가 다시 실행
    -----
    => object 랑 array 차이점은 처음 선언 시 사용하는 괄호 차이





